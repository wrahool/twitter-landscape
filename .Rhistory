mutate(type = ifelse(type == "barbera", "ideal points", "perceived ideologies"))
medians <- viz_tbl %>%
group_by(type) %>%
summarise(type_median = median(weighted_ideology))
weighted_distribution_plot <- viz_tbl %>%
ggplot(aes(x=weighted_ideology, fill=type)) +
geom_density(alpha = 0.4) +
geom_vline(data=medians, aes(xintercept=type_median, color=type),
linetype="dashed") +
theme_bw() +
xlim(c(-4,4)) +
labs(x="weighted ideology",
fill = "ideology type",
color = "ideology type")+
theme(legend.position = c(0.18, 0.85),
axis.text=element_text(size=12),
axis.title=element_text(size=14),
legend.text = element_text(size=12),
legend.title = element_text(size = 14),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
ggsave(file="figures/svg/fig4.svg", plot=weighted_distribution_plot, width=8, height=6)
ggsave(file="figures/jpg/fig4.jpg", device = "jpeg", plot=weighted_distribution_plot, width=8, height=6)
# RnR: are distributions bimodal?
unimodal_tbl <- NULL
for(t in c("perceived ideologies", "ideal points")) {
dip_test <- viz_tbl %>%
filter(type == t) %>%
pull(weighted_ideology) %>%
dip.test() %>%
tidy()
HDS <- dip_test %>%
pull(statistic)
p_value <- dip_test %>%
pull(p.value)
unimodal_tbl <- unimodal_tbl %>%
rbind(tibble_row(type = t, HDS = HDS,  p_value = p_value))
}
unimodal_tbl %>%
# mutate(modality = ifelse(p_value >= 0.05, "unimodal", "not unimodal")) %>%
rename("ideology type" = type) %>%
datasummary_df(output = "results/overall_weighted_unimodal.tex", fmt = "%.5f")
# paired wilcox test (are mturk ideologies significantly lesser than barbera ideologies)
wilcoxon_comparison_tbl <- viz_tbl %>%
pivot_wider(values_from = weighted_ideology, names_from = type) %>%
select(`ideal points`, `perceived ideologies`)
wilcox.test(wilcoxon_comparison_tbl$`perceived ideologies`, wilcoxon_comparison_tbl$`ideal points`, paired = TRUE, alternative = "less") %>%
tidy() %>%
rename("V_statistic" = 1, "p_value" = 2) %>%
select(-method) %>%
datasummary_df(output = "results/overall_wilcox.tex", fmt = "%.5f")
########################################
# within deciles
qs <- quantile(full_tbl$freq, probs = seq(0, 1, by = 0.1))
all_decile_tbl = NULL
for(i in 1:10) {
decile_tbl <- full_tbl %>%
filter(freq >= qs[i] & freq <= qs[i+1]) %>%
mutate(decile = i)
all_decile_tbl <- all_decile_tbl %>% rbind(decile_tbl)
}
medians <- all_decile_tbl %>%
group_by(decile) %>%
summarize(barbera = median(barbera_ideology),
mturk = median(mean_rating_attn-4)) %>%
ungroup() %>%
pivot_longer(cols = c(2,3), names_to = "type", values_to = "decile_median_ideology") %>%
mutate(type = ifelse(type == "barbera", "ideal points", "perceived ideologies"))
viz_tbl <- all_decile_tbl %>%
select(handle, decile, mean_rating_attn, barbera_ideology) %>%
mutate(mean_rating_attn = mean_rating_attn - 4) %>%
rename(mturk = mean_rating_attn,
barbera = barbera_ideology) %>%
pivot_longer(cols = c(3,4), names_to = "type", values_to = "ideology") %>%
mutate(type = ifelse(type == "barbera", "ideal points", "perceived ideologies")) %>%
inner_join(medians, by = c("decile", "type"))
decile_plots <- ggplot(viz_tbl, aes(x = ideology, y = as.factor(decile),
fill = type)) +
stat_density_ridges(quantile_lines = TRUE, quantiles = 2) +
geom_vline(xintercept=0, linetype="dashed") +
labs(x="ideology", y="decile") +
facet_wrap(~type) +
theme_bw() +
theme(legend.position = "none",
axis.text=element_text(size=12),
axis.title=element_text(size=14),
strip.text.x = element_text(size = 12))
ggsave(file="figures/svg/fig5.svg", plot=decile_plots, width=8, height=6)
ggsave(file="figures/jpg/fig5.jpg", device= "jpeg", plot=decile_plots, width=8, height=6)
# RnR: are distributions bimodal?
unimodality_p_values <- NULL
for(d in 1:10) {
for(t in c("perceived ideologies", "ideal points")) {
message(paste(d, " : ", t))
dip_test <- viz_tbl %>%
filter(type == t, decile == d) %>%
pull(ideology) %>%
dip.test() %>%
tidy()
HDS <- dip_test %>%
pull(statistic)
p_value <- dip_test %>%
pull(p.value)
unimodality_p_values <- unimodality_p_values %>%
rbind(tibble_row(decile = d, t = t, HDS = HDS, p_value = p_value))
}
}
unimodality_p_values %>%
# mutate(modality = ifelse(p_value >= 0.05, "unimodal", "not unimodal")) %>%
rename("ideology type" = t) %>%
datasummary_df(output = "results/decile_unweighted_unimodal.tex", fmt = "%.5f")
dec_wilcox_tbl <- NULL
for(dec in unique(viz_tbl$decile)){
message(dec)
wilcoxon_comparison_tbl <- viz_tbl %>%
filter(decile == dec) %>%
select(handle, type, ideology) %>%
pivot_wider(values_from = ideology, names_from = type) %>%
select(`ideal points`, `perceived ideologies`)
curr_wilcox_test <- wilcox.test(wilcoxon_comparison_tbl$`perceived ideologies`, wilcoxon_comparison_tbl$`ideal points`, paired = TRUE, alternative = "less") %>% tidy()
dec_wilcox_tbl <- dec_wilcox_tbl %>%
rbind(tibble_row(decile = dec, v_statistic = curr_wilcox_test$statistic, p_value = curr_wilcox_test$p.value, alternative = curr_wilcox_test$alternative))
}
dec_wilcox_tbl %>%
datasummary_df(output = "results/decile_wilcox.tex", fmt = "%.5f")
########################################
# within genres unweighted
elite_classes <- read_csv("data/elite_classification.csv")
classes <- elite_classes %>%
pull(sector1) %>%
unique()
classes <- classes[!classes %in% c("?", "X", "x")]
par(mfrow=c(5,2))
classes = c("hard news", "meme", "organization", "political pundit",
"political figure",  "brand", "media outlet", "public figure",
"sports", "entertainment")
all_class_elites_ideologies <- NULL
for(class in classes) {
message(class)
class_elites <- elite_classes %>%
filter(sector1 %in% class | sector2 %in% class | sector3 %in% class) %>%
pull(handle) %>% tolower()
class_elites_ideology <- full_tbl %>%
select(handle, mean_rating_attn, barbera_ideology, freq_scaled) %>%
filter(handle %in% class_elites) %>%
mutate(genre = class,
mturk_ideology = mean_rating_attn - 4,
weighted_mturk_ideology = mturk_ideology * freq_scaled,
weighted_barbera_ideology = barbera_ideology * freq_scaled) %>%
select(-mean_rating_attn)
all_class_elites_ideologies <- all_class_elites_ideologies %>%
rbind(class_elites_ideology)
}
class_medians <- all_class_elites_ideologies %>%
group_by(genre) %>%
summarize(median_mturk_ideology_unweighted = median(mturk_ideology),
median_barbera_ideology_unweighted = median(barbera_ideology),
median_mturk_ideology_weighted = median(weighted_mturk_ideology),
median_barbera_ideology_weighted = median(weighted_barbera_ideology)) %>%
ungroup()
all_class_elites_ideologies <- all_class_elites_ideologies %>%
select(-freq_scaled)
unweighted_medians <- class_medians %>%
select(genre, median_barbera_ideology_unweighted, median_mturk_ideology_unweighted) %>%
rename(mturk = median_mturk_ideology_unweighted,
barbera = median_barbera_ideology_unweighted) %>%
pivot_longer(cols = c(2,3), names_to = "type", values_to = "class_median_ideology")
viz_tbl <- all_class_elites_ideologies %>%
select(handle, genre, mturk_ideology, barbera_ideology) %>%
rename(mturk = mturk_ideology,
barbera = barbera_ideology) %>%
pivot_longer(cols = c(3,4), names_to = "type", values_to = "ideology") %>%
inner_join(unweighted_medians, by = c("type", "genre")) %>%
mutate(type = ifelse(type == "barbera", "ideal points", "perceived ideologies"))
unweighted_genre_plot <- viz_tbl %>%
ggplot(aes(x=ideology, fill = type)) +
geom_density(alpha = 0.4) +
geom_vline(aes(xintercept = class_median_ideology, colour = type), linetype = "dashed") +
xlim(c(-4,4))+
facet_wrap(~genre, nrow = 5, scales = "free_y") +
theme_bw() +
labs(x="unweighted ideology")
unweighted_genre_ridgeplots <- ggplot(viz_tbl, aes(x=ideology, y = genre, fill = type))+
stat_density_ridges(quantile_lines = TRUE, quantiles = 2) +
geom_vline(xintercept=0, linetype="dashed") +
labs(x = "ideology", y = "genre") +
facet_wrap(~type)+
theme_bw()+
theme(legend.position = "none",
axis.text=element_text(size=12),
axis.title=element_text(size=14),
strip.text.x = element_text(size = 12))
# this is the only robustness plot in the main script
ggsave(file="figures/FigA2-robustness.svg", plot=unweighted_genre_ridgeplots, width=8, height=6)
# RnR: unimodal?
unimodality_p_values <- NULL
for(g in unique(viz_tbl$genre)) {
for(t in c("perceived ideologies", "ideal points")) {
message(paste(g, " : ", t))
dip_test <- viz_tbl %>%
filter(genre == g, type == t) %>%
pull(ideology) %>%
dip.test() %>%
tidy()
unimodality_p_values <- unimodality_p_values %>%
rbind(tibble_row(genre = g, t = t, HDS = dip_test$statistic, p_value = dip_test$p.value))
}
}
# test
unimodality_p_values %>%
ggplot() +
geom_bar(aes(x=HDS, y=genre, fill = t), stat = "identity") +
facet_wrap(~t) +
geom_vline(xintercept = 0.05, linetype = "dashed", color = "red") +
theme_bw() +
labs(x="Hartigan's Dip Statistic")
unimodality_p_values %>%
# mutate(modality = ifelse(p_value >= 0.05, "unimodal", "not unimodal")) %>%
rename("ideology type" = t) %>%
datasummary_df(output = "results/genre_unweighted_unimodality.tex", fmt = "%.5f")
genre_wilcox_tbl <- NULL
for(g in unique(viz_tbl$genre)){
message(g)
wilcoxon_comparison_tbl <- viz_tbl %>%
filter(genre == g) %>%
select(handle, type, ideology) %>%
pivot_wider(values_from = ideology, names_from = type) %>%
select(`ideal points`, `perceived ideologies`)
curr_wilcox_tbl <- wilcox.test(wilcoxon_comparison_tbl$`perceived ideologies`,
wilcoxon_comparison_tbl$`ideal points`,
paired = TRUE, alternative = "less") %>%
tidy()
genre_wilcox_tbl <- genre_wilcox_tbl %>%
rbind(tibble_row(genre = g, V_statistic = curr_wilcox_tbl$statistic, p_value = curr_wilcox_tbl$p.value, alternative = curr_wilcox_tbl$alternative))
}
genre_wilcox_tbl %>%
datasummary_df("results/genre_unweighted_wilcox.tex", fmt = "%.5f")
# within genres weighted
weighted_medians <- class_medians %>%
select(genre, median_barbera_ideology_weighted, median_mturk_ideology_weighted) %>%
rename(mturk = median_mturk_ideology_weighted,
barbera = median_barbera_ideology_weighted) %>%
pivot_longer(cols = c(2,3), names_to = "type", values_to = "class_median_ideology")
viz_tbl <- all_class_elites_ideologies %>%
select(handle, genre, weighted_mturk_ideology, weighted_barbera_ideology) %>%
rename(mturk = weighted_mturk_ideology,
barbera = weighted_barbera_ideology) %>%
pivot_longer(cols = c(3,4), names_to = "type", values_to = "weighted_ideology") %>%
inner_join(weighted_medians, by = c("type", "genre")) %>%
mutate(type = ifelse(type == "barbera", "ideal points", "perceived ideologies"))
weighted_genre_plot <- viz_tbl %>%
ggplot(aes(x=weighted_ideology, fill = type)) +
geom_density(alpha = 0.4) +
geom_vline(aes(xintercept = class_median_ideology, colour = type), linetype = "dashed") +
xlim(c(-4,4))+
facet_wrap(~genre, nrow = 5, scales = "free_y") +
theme_bw() +
labs(x="weighted ideology")
weighted_genre_ridgeplots <- ggplot(viz_tbl, aes(x=weighted_ideology, y = genre, fill = type))+
stat_density_ridges(quantile_lines = TRUE, quantiles = 2) +
geom_vline(xintercept=0, linetype="dashed") +
labs(x = "ideology", y = "genre") +
facet_wrap(~type)+
theme_bw()+
theme(legend.position = "none") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14),
strip.text.x = element_text(size = 12))
weighted_genre_ridgeplots2 <- ggplot(viz_tbl, aes(x=weighted_ideology, y = genre, fill = type, height = stat(density)))+
geom_density_ridges(stat = "density") +
geom_vline(xintercept=0, linetype="dashed") +
labs(x = "ideology", y = "genre") +
facet_wrap(~type)+
theme_bw()+
theme(legend.position = "none") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14),
strip.text.x = element_text(size = 12))
ggsave(file="figures/svg/fig6.svg", plot=weighted_genre_ridgeplots, width=8, height=6)
ggsave(file="figures/jpg/fig6.jpg", device = "jpeg", plot=weighted_genre_ridgeplots, width=8, height=6)
# this is the only robustness plot in the main script
ggsave(file="figures/svg/FigA2-robustness.svg", plot=unweighted_genre_ridgeplots, width=8, height=6)
setwd("C:/Users/Subhayan/Work/twitter-landscape/")
library(tidyverse)
library(ggrepel)
library(ggridges)
library(cowplot)
library(svglite)
library(rstatix)
library(modelsummary)
elite_df <- read_csv("data/mturk_ideologies.csv")
elites <- elite_df$handle
elites <- c(elites, "realDonaldTrump", "BernieSanders")
load("data/master_edge_list.Rdata")
following_tbl <- following_df %>%
as_tibble() %>%
rename("user" = 1, "following" = 2) %>%
mutate(user = as.character(user), following = as.character(following))
elite_following_tbl <- following_tbl %>%
filter(tolower(following) %in% tolower(elites))
# number of users who don't follow any elites
length(unique(following_tbl$user)) - length(unique(elite_following_tbl$user))
elite_following_tbl <- elite_following_tbl %>%
filter(user != "Tip") # Tip is both elite as well as ordinary user
elite_genres <- read_csv("data/elite_classification.csv")
genres <- c("hard news", "meme", "organization", "political pundit",
"political figure",  "brand", "media outlet", "public figure",
"sports", "entertainment")
elite_activity <- read_csv("data/elites_activity.csv")
relevance_df <- read_csv("data/all_relevance_ideologies.csv")
relevance_df <- relevance_df %>%
select(userhandle, relevance_kw, relevance_delib) %>%
mutate(handle = tolower(userhandle)) %>%
select(-userhandle)
elite_followers_count <- elite_following_tbl %>%
group_by(following) %>%
tally() %>%
rename("elite" = 1, "sample_follower_count" = 2) %>%
mutate(elite = tolower(elite))
elite_counts <- elite_followers_count %>%
inner_join(elite_activity, by = c("elite" = "handle"))
genre_tbl <- NULL
for(genre in genres) {
genre_elites <- elite_genres %>%
filter(sector1 == genre | sector2 == genre | sector3 == genre) %>%
pull(handle) %>%
unique() %>%
tolower()
genre_counts <- elite_counts %>%
filter(elite %in% genre_elites) %>%
mutate(genre = genre)
genre_tbl <- genre_tbl %>%
rbind(genre_counts)
}
# pairwise tests
wilcox_test_followers_holm_tbl <- genre_tbl %>%
pairwise_wilcox_test(sample_follower_count ~ genre, p.adjust.method = "holm")
wilcox_test_followers_bonf_tbl <- genre_tbl %>%
pairwise_wilcox_test(sample_follower_count ~ genre, p.adjust.method = "bonf")
t_test_followers_holm_tbl <- genre_tbl %>%
pairwise_t_test(sample_follower_count ~ genre, p.adjust.method = "holm")
t_test_followers_bonf_tbl <- genre_tbl %>%
pairwise_t_test(sample_follower_count ~ genre, p.adjust.method = "bonf")
wilcox_test_tweets_holm_tbl <- genre_tbl %>%
pairwise_wilcox_test(numberoftweets ~ genre, p.adjust.method = "holm")
wilcox_test_tweets_bonf_tbl <- genre_tbl %>%
pairwise_wilcox_test(numberoftweets ~ genre, p.adjust.method = "bonf")
t_test_tweets_holm_tbl <- genre_tbl %>%
pairwise_t_test(numberoftweets ~ genre, p.adjust.method = "holm")
t_test_tweets_bonf_tbl <- genre_tbl %>%
pairwise_t_test(numberoftweets ~ genre, p.adjust.method = "bonf")
followers_boxplot <- ggplot(genre_tbl) +
geom_boxplot(aes(x=sample_follower_count, y=genre)) +
theme_bw()
numbeoftweets_boxplot <- ggplot(genre_tbl) +
geom_boxplot(aes(x=numberoftweets, y=genre)) +
theme_bw()
# per ordinary user analysis
elite_following_genre_tbl <- elite_following_tbl %>%
mutate(elite = tolower(following)) %>%
inner_join(genre_tbl) %>%
select(-c(following, sample_follower_count, numberoftweets))
user_elite_genre_count <- elite_following_genre_tbl %>%
group_by(user) %>%
count(genre)
user_elite_genre_count2 <- user_elite_genre_count %>%
mutate(genre2 = ifelse(genre %in% c("hard news", "media outlet", "political figure", "political pundit"), "p", "np")) %>%
group_by(user, genre2) %>%
summarize(n2 = sum(n)) %>%
pivot_wider(names_from = genre2, values_from = n2) %>%
mutate(p = ifelse(is.na(p), 0, p),
np = ifelse(is.na(np), 0, np)) %>%
mutate(np_p_ratio = np/p) %>%
mutate(inf_or_no = (np_p_ratio == Inf))
user_elite_genre_count2 %>%
pull(inf_or_no) %>%
table()
# FALSE  TRUE
# 6246  2403
# of the users who followed at least 1 opinion leader, 2403/(2403+6246) = ~28% didn't follow a single political or news / media opinion leader
user_elite_genre_count2 %>%
filter(np_p_ratio < Inf) %>%
pull(np_p_ratio) %>%
median()
#4.5. those who followed at least 1 political (including news and media) opinion leader and at least 1 non-political opinion leader,
# were more likely to follow, on average, 8.4 times (median 4.5) as many non-political opinion leader compared to political opinion leaders
# do individuals follow non-political elites less than political elites?
user_genre_count <- ggplot(user_elite_genre_count_full) +
geom_boxplot(aes(x=n, y=reorder(genre,n))) +
labs(x="# opinion leaders followed by ordinary users", y = "genre") +
theme_bw() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14)) # yes, they do
# for those users who don't follow any elites of certain genres, insert 0 for those combinations
user_elite_genre_count_full <- expand.grid(unique(user_elite_genre_count$user), unique(user_elite_genre_count$genre)) %>%
as_tibble() %>%
rename("user" = 1, "genre" = 2) %>%
left_join(user_elite_genre_count) %>%
mutate(n = ifelse(is.na(n), 0, n))
# wilcox test
wilcox_results_less <- user_elite_genre_count_full %>%
ungroup() %>%
wilcox_test(n ~ genre, p.adjust.method = "holm", paired = T, alternative = "l")
wilcox_results_less2 <- wilcox_results_less %>%
select(group1, group2, statistic, p.adj, p.adj.signif) %>%
mutate(alt = "lesser") %>%
filter(p.adj.signif != "ns") %>%
select(group1, group2, statistic, alt, p.adj, p.adj.signif)
wilcox_results_greater <- user_elite_genre_count_full %>%
ungroup() %>%
wilcox_test(n ~ genre, p.adjust.method = "holm", paired = T, alternative = "g")
wilcox_results_greater2 <- wilcox_results_greater %>%
select(group1, group2, statistic, p.adj, p.adj.signif) %>%
mutate(alt = "greater") %>%
filter(p.adj.signif != "ns") %>%
select(group1, group2, statistic, alt, p.adj, p.adj.signif)
wilcox_results_unequal <- user_elite_genre_count_full %>%
ungroup() %>%
wilcox_test(n ~ genre, p.adjust.method = "holm", paired = T)
wilcox_results_unequal2 <- wilcox_results_unequal %>%
select(group1, group2, statistic, p.adj, p.adj.signif) %>%
mutate(alt = "unequal") %>%
filter(p.adj.signif == "ns") %>%
select(group1, group2, statistic, alt, p.adj, p.adj.signif)
sig_wilcox_results <- wilcox_results_greater2 %>%
rbind(wilcox_results_less2) %>%
rbind(wilcox_results_unequal2) %>%
arrange(group1, group2)
user_elite_genre_count_full %>%
group_by(genre) %>%
summarise(median_n = median(n),
mean_n = mean(n)) %>%
arrange(desc(median_n))
# # A tibble: 10 x 2
# genre            median_n
# <chr>               <dbl>
# 1 entertainment          10
# 2 brand                   1
# 3 media outlet            1
# 4 political figure        1
# 5 public figure           1
# 6 sports                  1
# 7 hard news               0
# 8 meme                    0
# 9 organization            0
# 10 political pundit       0
# compare elites versus non-elites
# for each user, get their number of friends by reading friends list from a long long time ago
friends_folder <- "C:/Users/Subhayan/Google Drive/Research Projects/Ongoing/Affective Polarization Experiment/Pilot/following lists/"
problem_handles <- "Nepal2812"
o_user_friend_tbl <- NULL
for(o_user in unique(elite_following_tbl$user)) {
print(o_user)
if (o_user %in% problem_handles)
next
o_user_friends_count <- read_csv(paste0(friends_folder, '/', o_user, '.csv')) %>% nrow()
o_user_elite_count <- elite_following_tbl %>%
filter(user == o_user) %>%
nrow()
o_user_friend_tbl <- o_user_friend_tbl %>%
rbind(tibble(user = o_user, elite_count = o_user_elite_count, nonelite_count = o_user_friends_count - o_user_elite_count))
}
o_user_friend_long_tbl <- o_user_friend_tbl %>%
pivot_longer(cols = 2:3, names_to = "type", values_to = "count") %>%
mutate(type = ifelse(type == "elite_count", "opinion leader", "non opinion leader"))
user_elite_nonelite <- ggplot(o_user_friend_long_tbl) +
geom_boxplot(aes(x=count, y=reorder(type, count))) +
labs(x="# of accounts followed by ordinary users", y = "type") +
theme_bw() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14))
o_user_friend_long_tbl %>%
wilcox_test(count ~ type, paired = T, alternative = "greater") %>%
add_significance() %>%
mutate(alternative = "greater") %>%
select(group1, group2, alternative, statistic, p, p.signif) %>%
rename(genre1 = 1, genre2 = 2) %>%
datasummary_df(output = "results/per_user_elite_vs_nonelite.tex")
rnr_plot1 <- plot_grid(plotlist = list(user_genre_count, user_elite_nonelite),
nrow = 2,
align = T,
rel_heights = c(3.5, 1),
labels = LETTERS[1:2])
ggsave(file="figures/svg/fig2.svg", plot=rnr_plot1, width=10, height=7)
ggsave(file="figures/jpg/fig2.jpg", device = "jpeg", plot=rnr_plot1, width=10, height=7)
sig_wilcox_results %>%
rename(genre1 = 1, genre2 = 2, alternative = "alt") %>%
datasummary_df(output = "results/per_user_genre_wilcox.tex", fmt = "%.5f")
user_genre_count
user_elite_genre_count_full
# do individuals follow non-political elites less than political elites?
user_genre_count <- ggplot(user_elite_genre_count_full) +
geom_boxplot(aes(x=n, y=reorder(genre,n))) +
labs(x="# opinion leaders followed by ordinary users", y = "genre") +
theme_bw() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14)) # yes, they do
user_genre_count
user_elite_genre_count_full
user_elite_genre_count_full
user_elite_genre_count_full %>% filter(user == "____zaaach")
user_genre_count
user_elite_nonelite
rnr_plot1
rnr_plot1 <- plot_grid(plotlist = list(user_genre_count, user_elite_nonelite),
nrow = 2,
align = T,
rel_heights = c(3.5, 1),
labels = LETTERS[1:2])
rnr_plot1
ggsave(file="figures/svg/fig2.svg", plot=rnr_plot1, width=10, height=7)
ggsave(file="figures/jpg/fig2.jpg", device = "jpeg", plot=rnr_plot1, width=10, height=7)
