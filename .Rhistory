viz_tbl %>%
ggplot(aes(x=ideology, fill = type)) +
geom_density(alpha = 0.4) +
geom_vline(aes(xintercept = decile_median_ideology, colour = type), linetype = "dashed") +
xlim(c(-4,4)) +
facet_wrap(~decile, nrow = 5, scales = "free_y") +
theme_bw() +
labs(x="unweighted ideology")
viz_tbl %>%
ggplot(aes(x=ideology, y=decile)) +
geom_density_ridges()
decile_perceived_plot <- ggplot(viz_tbl[viz_tbl$type == "mturk",], aes(x = ideology, y = as.factor(decile)), colour = type) +
stat_density_ridges(quantile_lines = TRUE, quantiles = 2) +
labs(x="perceived ideology", y="decile") +
theme_bw()
decile_barbera_pot <- ggplot(viz_tbl[viz_tbl$type == "barbera",], aes(x = ideology, y = as.factor(decile)), colour = type) +
stat_density_ridges(quantile_lines = TRUE, quantiles = 2) +
labs(x="ideal point", y="decile") +
theme_bw()
decile_plots <- plot_grid(decile_barbera_pot, decile_perceived_plot, nrow = 1)
decile_plots <- ggplot(viz_tbl, aes(x = ideology, y = as.factor(decile),
fill = type)) +
stat_density_ridges(quantile_lines = TRUE, quantiles = 2, , alpha = .4) +
labs(x="ideology", y="decile") +
facet_wrap(~type) +
theme_bw()
relevance_df <- read_csv("../echo-chamber-exp/important_results/rnr/oct 9/all_relevance_ideologies.csv")
relevance_df <- relevance_df %>%
select(userhandle, relevance_kw, relevance_delib) %>%
mutate(userhandle = tolower(userhandle))
elite_classes <- read_csv("data/elite_classification.csv")
classes <- elite_classes %>%
pull(sector1) %>%
unique()
classes <- classes[!classes %in% c("?", "X", "x")]
par(mfrow=c(5,2))
classes = c("hard news", "meme", "organization", "political pundit",
"political figure",  "brand", "media outlet", "public figure",
"sports", "entertainment")
all_class_elites_relevance <- NULL
for(class in classes) {
message(class)
class_elites <- elite_classes %>%
filter(sector1 %in% class | sector2 %in% class | sector3 %in% class) %>%
pull(handle) %>% tolower()
all_class_elites_relevance <- relevance_df %>%
filter(userhandle %in% class_elites) %>%
mutate(class = class) %>%
rbind(all_class_elites_relevance)
}
ggplot(all_class_elites_relevance, aes(x = relevance_kw, y = class)) +
stat_density_ridges(quantile_lines = TRUE, quantiles = 2) +
labs(x="relevance_kw", y="genre") +
theme_bw()
setwd("C:/Users/Subhayan Mukerjee/Work/twitter-landscape/")
library(tidyverse)
library(corrr)
library(cowplot)
library(broom)
library(stargazer)
library(knitr)
viz_tbl %>%
ggplot(aes(x=ideology, fill = type)) +
geom_density(alpha = 0.4) +
geom_vline(aes(xintercept = decile_median_ideology, colour = type), linetype = "dashed") +
xlim(c(-4,4)) +
facet_wrap(~decile, nrow = 5, scales = "free_y") +
theme_bw() +
labs(x="unweighted ideology")
viz_tbl %>%
ggplot(aes(x=ideology, y=decile)) +
geom_density_ridges()
decile_perceived_plot <- ggplot(viz_tbl[viz_tbl$type == "mturk",], aes(x = ideology, y = as.factor(decile)), colour = type) +
stat_density_ridges(quantile_lines = TRUE, quantiles = 2) +
labs(x="perceived ideology", y="decile") +
theme_bw()
decile_barbera_pot <- ggplot(viz_tbl[viz_tbl$type == "barbera",], aes(x = ideology, y = as.factor(decile)), colour = type) +
stat_density_ridges(quantile_lines = TRUE, quantiles = 2) +
labs(x="ideal point", y="decile") +
theme_bw()
decile_plots <- plot_grid(decile_barbera_pot, decile_perceived_plot, nrow = 1)
decile_plots <- ggplot(viz_tbl, aes(x = ideology, y = as.factor(decile),
fill = type)) +
stat_density_ridges(quantile_lines = TRUE, quantiles = 2, , alpha = .4) +
labs(x="ideology", y="decile") +
facet_wrap(~type) +
theme_bw()
relevance_df <- read_csv("../echo-chamber-exp/important_results/rnr/oct 9/all_relevance_ideologies.csv")
relevance_df <- relevance_df %>%
select(userhandle, relevance_kw, relevance_delib) %>%
mutate(userhandle = tolower(userhandle))
elite_classes <- read_csv("data/elite_classification.csv")
classes <- elite_classes %>%
pull(sector1) %>%
unique()
classes <- classes[!classes %in% c("?", "X", "x")]
par(mfrow=c(5,2))
classes = c("hard news", "meme", "organization", "political pundit",
"political figure",  "brand", "media outlet", "public figure",
"sports", "entertainment")
all_class_elites_relevance <- NULL
for(class in classes) {
message(class)
class_elites <- elite_classes %>%
filter(sector1 %in% class | sector2 %in% class | sector3 %in% class) %>%
pull(handle) %>% tolower()
all_class_elites_relevance <- relevance_df %>%
filter(userhandle %in% class_elites) %>%
mutate(class = class) %>%
rbind(all_class_elites_relevance)
}
ggplot(all_class_elites_relevance, aes(x = relevance_kw, y = class)) +
stat_density_ridges(quantile_lines = TRUE, quantiles = 2) +
labs(x="relevance_kw", y="genre") +
theme_bw()
library(ggridges)
viz_tbl %>%
ggplot(aes(x=ideology, fill = type)) +
geom_density(alpha = 0.4) +
geom_vline(aes(xintercept = decile_median_ideology, colour = type), linetype = "dashed") +
xlim(c(-4,4)) +
facet_wrap(~decile, nrow = 5, scales = "free_y") +
theme_bw() +
labs(x="unweighted ideology")
viz_tbl %>%
ggplot(aes(x=ideology, y=decile)) +
geom_density_ridges()
decile_perceived_plot <- ggplot(viz_tbl[viz_tbl$type == "mturk",], aes(x = ideology, y = as.factor(decile)), colour = type) +
stat_density_ridges(quantile_lines = TRUE, quantiles = 2) +
labs(x="perceived ideology", y="decile") +
theme_bw()
library(tidyverse)
dat <- read_csv("../../Downloads/common_nodes_all_details.csv")
dat
dat <- dat %>%
select(Media, `Percent Reach`, State)
dat
dat %>%
select(Media, `Percent Reach`, State) %>%
rename(Region = State)
dat <- read_csv("../../Downloads/common_nodes_all_details.csv")
dat <- dat %>%
select(Media, `Percent Reach`, State) %>%
rename(Region = State,
Reach = `Percent Reach`)
dat
write.table(dat, file = "../../Downloads/RNR_all_media_table.txt", sep = ",", quote = FALSE, row.names = F)
dat %>%
select(Media, `Percent Reach`, State) %>%
rename(Region = State,
Reach = `Percent Reach`) %>%
mutate(Reach = round(Reach))
dat <- read_csv("../../Downloads/common_nodes_all_details.csv")
dat %>%
select(Media, `Percent Reach`, State) %>%
rename(Region = State,
Reach = `Percent Reach`) %>%
mutate(Reach = round(Reach))
dat %>%
select(Media, `Percent Reach`, State) %>%
rename(Region = State,
Reach = `Percent Reach`) %>%
mutate(Reach = round(Reach, 2))
dat <- read_csv("../../Downloads/common_nodes_all_details.csv")
dat <- dat %>%
select(Media, `Percent Reach`, State) %>%
rename(Region = State,
Reach = `Percent Reach`) %>%
mutate(Reach = round(Reach, 2))
write.table(dat, file = "../../Downloads/RNR_all_media_table.txt", sep = ",", quote = FALSE, row.names = F)
write.table(dat, file = "../../Downloads/RNR_all_media_table.txt", sep = ",", quote = FALSE, row.names = F)
library(devtools)
install.pacl
install.packages("devtools")
devtools::install_github("JaseZiv/worldfootballR")
library(worldfootballr)
library(worldfootballR)
team_urls <- tm_league_team_urls(country_name = "England", start_year = 2020)
team_urls <- tm_league_team_urls(country_name = "England", start_year = 2020)
team_urls <- tm_league_team_urls(country_name = "England", start_year = 2020)
library(worldfootballR)
team_urls <- tm_league_team_urls(country_name = "England", start_year = 2020)
epl_teams <- tm_league_team_urls(country_name = "England", start_year = "2020")
library(worldfootballR)
epl_teams <- tm_league_team_urls(country_name = "England", start_year = "2020")
library(worldfootballR)
epl_teams <- tm_league_team_urls(country_name = "England", start_year = "2020")
library(worldfootballR)
team_urls <- tm_league_team_urls(country_name = "England", start_year = 2020)
library(worldfootballR)
team_urls <- tm_league_team_urls(country_name = "England", start_year = 2020)
setwd("C:/Users/Subhayan/Work/twitter-landscape/")
library(tidyverse)
library(ggrepel)
library(ggridges)
library(cowplot)
library(svglite)
library(rstatix)
elite_df <- read_csv("data/mturk_ideologies.csv")
elites <- elite_df$handle
elites <- c(elites, "realDonaldTrump", "BernieSanders")
load("data/master_edge_list.Rdata")
following_tbl <- following_df %>%
as_tibble() %>%
rename("user" = 1, "following" = 2) %>%
mutate(user = as.character(user), following = as.character(following))
elite_following_tbl <- following_tbl %>%
filter(tolower(following) %in% tolower(elites))
elite_following_tbl <- elite_following_tbl %>%
filter(user != "Tip") # Tip is both elite as well as ordinary user
elite_genres <- read_csv("data/elite_classification.csv")
genres <- c("hard news", "meme", "organization", "political pundit",
"political figure",  "brand", "media outlet", "public figure",
"sports", "entertainment")
elite_activity <- read_csv("data/elites_activity.csv")
relevance_df <- read_csv("data/all_relevance_ideologies.csv")
relevance_df <- relevance_df %>%
select(userhandle, relevance_kw, relevance_delib) %>%
mutate(handle = tolower(userhandle)) %>%
select(-userhandle)
elite_followers_count <- elite_following_tbl %>%
group_by(following) %>%
tally() %>%
rename("elite" = 1, "sample_follower_count" = 2) %>%
mutate(elite = tolower(elite))
elite_counts <- elite_followers_count %>%
inner_join(elite_activity, by = c("elite" = "handle"))
genre_tbl <- NULL
for(genre in genres) {
genre_elites <- elite_genres %>%
filter(sector1 == genre | sector2 == genre | sector3 == genre) %>%
pull(handle) %>%
unique() %>%
tolower()
genre_counts <- elite_counts %>%
filter(elite %in% genre_elites) %>%
mutate(genre = genre)
genre_tbl <- genre_tbl %>%
rbind(genre_counts)
}
# pairwise tests
wilcox_test_followers_holm_tbl <- genre_tbl %>%
pairwise_wilcox_test(sample_follower_count ~ genre, p.adjust.method = "holm")
wilcox_test_followers_bonf_tbl <- genre_tbl %>%
pairwise_wilcox_test(sample_follower_count ~ genre, p.adjust.method = "bonf")
t_test_followers_holm_tbl <- genre_tbl %>%
pairwise_t_test(sample_follower_count ~ genre, p.adjust.method = "holm")
t_test_followers_bonf_tbl <- genre_tbl %>%
pairwise_t_test(sample_follower_count ~ genre, p.adjust.method = "bonf")
wilcox_test_tweets_holm_tbl <- genre_tbl %>%
pairwise_wilcox_test(numberoftweets ~ genre, p.adjust.method = "holm")
wilcox_test_tweets_bonf_tbl <- genre_tbl %>%
pairwise_wilcox_test(numberoftweets ~ genre, p.adjust.method = "bonf")
t_test_tweets_holm_tbl <- genre_tbl %>%
pairwise_t_test(numberoftweets ~ genre, p.adjust.method = "holm")
t_test_tweets_bonf_tbl <- genre_tbl %>%
pairwise_t_test(numberoftweets ~ genre, p.adjust.method = "bonf")
followers_boxplot <- ggplot(genre_tbl) +
geom_boxplot(aes(x=sample_follower_count, y=genre)) +
theme_bw()
numbeoftweets_boxplot <- ggplot(genre_tbl) +
geom_boxplot(aes(x=numberoftweets, y=genre)) +
theme_bw()
# per ordinary user analysis
elite_following_genre_tbl <- elite_following_tbl %>%
mutate(elite = tolower(following)) %>%
inner_join(genre_tbl) %>%
select(-c(following, sample_follower_count, numberoftweets))
user_elite_genre_count <- elite_following_genre_tbl %>%
group_by(user) %>%
count(genre)
# do individuals follow non-political elites less than political elites?
user_genre_count <- ggplot(user_elite_genre_count) +
geom_boxplot(aes(x=n, y=reorder(genre,n))) +
labs(x="# opinion leaders followed by ordinary users", y = "genre") +
theme_bw() # yes, they do
# for those users who don't follow any elites of certain genres, insert 0 for those combinations
user_elite_genre_count_full <- expand.grid(unique(user_elite_genre_count$user), unique(user_elite_genre_count$genre)) %>%
as_tibble() %>%
rename("user" = 1, "genre" = 2) %>%
left_join(user_elite_genre_count) %>%
mutate(n = ifelse(is.na(n), 0, n))
# "but but ... iNFeRentIaL sTAtS
wilcox_results <- user_elite_genre_count_full %>%
ungroup() %>%
wilcox_test(n ~ genre, p.adjust.method = "holm", paired = T)
wilcox_results %>%
# filter(p.adj.signif != "ns") %>%
print(n=Inf) # happy motherfucker?
# compare elites versus non-elites
# for each user, get their number of friends by reading friends list from a long long time ago
friends_folder <- "C:/Users/Subhayan/Google Drive/Research Projects/Ongoing/Affective Polarization Experiment/Pilot/following lists/"
problem_handles <- "Nepal2812"
o_user_friend_tbl <- NULL
for(o_user in unique(elite_following_tbl$user)) {
print(o_user)
if (o_user %in% problem_handles)
next
o_user_friends_count <- read_csv(paste0(friends_folder, '/', o_user, '.csv')) %>% nrow()
o_user_elite_count <- elite_following_tbl %>%
filter(user == o_user) %>%
nrow()
o_user_friend_tbl <- o_user_friend_tbl %>%
rbind(tibble(user = o_user, elite_count = o_user_elite_count, nonelite_count = o_user_friends_count - o_user_elite_count))
}
o_user_friend_long_tbl <- o_user_friend_tbl %>%
pivot_longer(cols = 2:3, names_to = "type", values_to = "count") %>%
mutate(type = ifelse(type == "elite_count", "opinion leader", "non opinion leader"))
user_elite_nonelite <- ggplot(o_user_friend_long_tbl) +
geom_boxplot(aes(x=count, y=type)) +
labs(x="# of accounts followed") +
theme_bw()
o_user_friend_long_tbl %>%
wilcox_test(count ~ type, paired = T, alternative = "greater") %>%
add_significance()
plot_grid(plotlist = list(user_genre_count, user_elite_nonelite), nrow = 2, align = T)
wilcox_results
# "but but ... iNFeRentIaL sTAtS
wilcox_results_less <- user_elite_genre_count_full %>%
ungroup() %>%
wilcox_test(n ~ genre, p.adjust.method = "holm", paired = T, alternative = "l")
wilcox_results_greater <- user_elite_genre_count_full %>%
ungroup() %>%
wilcox_test(n ~ genre, p.adjust.method = "holm", paired = T, alternative = "g")
wilcox_results_less
wilcox_results_less %>%
select(group1, group2, p.adj, p.adj.signif) %>%
mutate(alt = "less")
wilcox_results_less %>%
select(group1, group2, p.adj, p.adj.signif) %>%
mutate(alt = "less") %>%
filter(p.adj.signif != "ns")
wilcox_results_less2 <- wilcox_results_less %>%
select(group1, group2, p.adj, p.adj.signif) %>%
mutate(alt = "less") %>%
filter(p.adj.signif != "ns") %>%
select(group1, group2, less, p.adj, p.adj.signif)
wilcox_results_less2 <- wilcox_results_less %>%
select(group1, group2, p.adj, p.adj.signif) %>%
mutate(alt = "less") %>%
filter(p.adj.signif != "ns") %>%
select(group1, group2, alt, p.adj, p.adj.signif)
wilcox_results_less2
wilcox_results_less2 <- wilcox_results_less %>%
select(group1, group2, p.adj, p.adj.signif) %>%
mutate(alt = "lesser") %>%
filter(p.adj.signif != "ns") %>%
select(group1, group2, alt, p.adj, p.adj.signif)
wilcox_results_greater2 <- wilcox_results_greater %>%
select(group1, group2, p.adj, p.adj.signif) %>%
mutate(alt = "greater") %>%
filter(p.adj.signif != "ns") %>%
select(group1, group2, alt, p.adj, p.adj.signif)
wilcox_results_greater2
wilcox_results_greater2 %>%
rbind(wilcox_results_less2)
wilcox_results_greater2 %>%
rbind(wilcox_results_less2) %>%
arrange(group1, group2)
sig_wilcox_results <- wilcox_results_greater2 %>%
rbind(wilcox_results_less2) %>%
arrange(group1, group2)
sig_wilcox_results
View(sig_wilcox_results)
sig_wilcox_results %>%
write_csv("results/wilcox_results.csv")
